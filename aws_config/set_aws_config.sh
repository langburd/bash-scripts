#!/bin/bash

# Check if AWS CLI is installed
if ! command -v aws >/dev/null 2>&1; then
    echo "AWS CLI is not installed. Please install AWS CLI - https://aws.amazon.com/cli"
    exit 1
fi

# Check if jq is installed
if ! command -v jq >/dev/null 2>&1; then
    echo "jq is not installed. Please install jq - https://jqlang.github.io/jq"
    exit 1
fi

# Predefine the AWS account ID of the management account
MANAGEMENT_AWS_ACCOUNT="123456789101"
echo "Please enter the Account ID of the AWS Management Account (Press Enter/Return if it's \"${MANAGEMENT_AWS_ACCOUNT}\"):"
read -r DEFINED_MANAGEMENT_AWS_ACCOUNT
[[ -n "${DEFINED_MANAGEMENT_AWS_ACCOUNT}" ]] && MANAGEMENT_AWS_ACCOUNT="${DEFINED_MANAGEMENT_AWS_ACCOUNT}"

# Predefine the SSO start URL
SSO_START_URL="https://company.awsapps.com/start"
echo "Please enter the AWS SSO start URL (Press Enter/Return if it's \"${SSO_START_URL}\"):"
read -r DEFINED_SSO_START_URL
[[ -n "${DEFINED_SSO_START_URL}" ]] && SSO_START_URL="${DEFINED_SSO_START_URL}"

# Set new ~/.aws/config file
SSO_SESSION="# Generated by https://github.com/langburd/bash-scripts/tree/master/aws_config

[sso-session admin]
sso_start_url = ${SSO_START_URL}
sso_region = us-east-1
sso_registration_scopes = sso:account:access

[profile default]
sso_session = admin

[profile AdministratorAccess-${MANAGEMENT_AWS_ACCOUNT}]
sso_session = admin
sso_account_id = ${MANAGEMENT_AWS_ACCOUNT}
sso_role_name = AdministratorAccess
region = us-east-1
output = json"

# Backup ~/.aws/config file if it exists
if [[ -f ~/.aws/config ]]; then
    echo "The existing ~/.aws/config file is found. Do you want to overwrite it?"
    echo "It will be backed up to ~/.aws/config.bak"
    echo "Please enter 'y' to continue or 'n' to exit:"
    read -r OVERWRITE
    if [[ "${OVERWRITE}" != "y" ]]; then
        echo "Exiting..."
        exit 1
    fi
    cp ~/.aws/config ~/.aws/config.bak
fi

echo "Creating initial AWS SSO configuration and adding AWS CLI profile for management account (${MANAGEMENT_AWS_ACCOUNT}) to ~/.aws/config"
echo "${SSO_SESSION}" >~/.aws/config

# Check if user is logged in
if ! aws sts get-caller-identity --profile "AdministratorAccess-${MANAGEMENT_AWS_ACCOUNT}" >/dev/null 2>&1; then
    # Logging in to AWS SSO
    echo "Logging in to AWS SSO..."
    aws sso login --profile "AdministratorAccess-${MANAGEMENT_AWS_ACCOUNT}"
fi

# # Get list of organization accounts in AWS Organizations
ACCOUNTS=$(aws organizations list-accounts --profile "AdministratorAccess-${MANAGEMENT_AWS_ACCOUNT}" --output json | jq -r '.Accounts[] | .Id' || true)

# Loop through each AWS account
for ACCOUNT_ID in ${ACCOUNTS}; do
    # Check if ${ACCOUNT_ID} is the management account
    if [[ "${ACCOUNT_ID}" != "${MANAGEMENT_AWS_ACCOUNT}" ]]; then

        PROFILE="
[profile AdministratorAccess-${ACCOUNT_ID}]
sso_session = admin
sso_account_id = ${ACCOUNT_ID}
sso_role_name = AdministratorAccess
region = us-east-1
output = json"
        echo "Adding AWS CLI profile for account ${ACCOUNT_ID} to ~/.aws/config"
        echo "${PROFILE}" >>~/.aws/config
    fi
done
